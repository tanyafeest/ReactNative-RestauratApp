diff --git a/node_modules/react-native-material-textfield/src/components/affix/index.js b/node_modules/react-native-material-textfield/src/components/affix/index.js
index 0f85022..e467adb 100644
--- a/node_modules/react-native-material-textfield/src/components/affix/index.js
+++ b/node_modules/react-native-material-textfield/src/components/affix/index.js
@@ -9,26 +9,26 @@ export default class Affix extends PureComponent {
     numberOfLines: 1,
   };
 
-  static propTypes = {
-    numberOfLines: PropTypes.number,
-    style: Animated.Text.propTypes.style,
+  // static propTypes = {
+  //   numberOfLines: PropTypes.number,
+  //   style: PropTypes.object,
 
-    color: PropTypes.string.isRequired,
-    fontSize: PropTypes.number.isRequired,
+  //   color: PropTypes.string.isRequired,
+  //   fontSize: PropTypes.number.isRequired,
 
-    type: PropTypes
-      .oneOf(['prefix', 'suffix'])
-      .isRequired,
+  //   type: PropTypes
+  //     .oneOf(['prefix', 'suffix'])
+  //     .isRequired,
 
-    labelAnimation: PropTypes
-      .instanceOf(Animated.Value)
-      .isRequired,
+  //   labelAnimation: PropTypes
+  //     .instanceOf(Animated.Value)
+  //     .isRequired,
 
-    children: PropTypes.oneOfType([
-      PropTypes.arrayOf(PropTypes.node),
-      PropTypes.node,
-    ]),
-  };
+  //   children: PropTypes.oneOfType([
+  //     PropTypes.arrayOf(PropTypes.node),
+  //     PropTypes.node,
+  //   ]),
+  // };
 
   render() {
     let { labelAnimation, style, children, type, fontSize, color } = this.props;
diff --git a/node_modules/react-native-material-textfield/src/components/counter/index.js b/node_modules/react-native-material-textfield/src/components/counter/index.js
index 35d3264..e4258cd 100644
--- a/node_modules/react-native-material-textfield/src/components/counter/index.js
+++ b/node_modules/react-native-material-textfield/src/components/counter/index.js
@@ -5,15 +5,15 @@ import { Text } from 'react-native';
 import styles from './styles';
 
 export default class Counter extends PureComponent {
-  static propTypes = {
-    count: PropTypes.number.isRequired,
-    limit: PropTypes.number,
+  // static propTypes = {
+  //   count: PropTypes.number.isRequired,
+  //   limit: PropTypes.number,
 
-    baseColor: PropTypes.string.isRequired,
-    errorColor: PropTypes.string.isRequired,
+  //   baseColor: PropTypes.string.isRequired,
+  //   errorColor: PropTypes.string.isRequired,
 
-    style: Text.propTypes.style,
-  };
+  //   style: Text.propTypes.style,
+  // };
 
   render() {
     let { count, limit, baseColor, errorColor, style } = this.props;
diff --git a/node_modules/react-native-material-textfield/src/components/field/index.js b/node_modules/react-native-material-textfield/src/components/field/index.js
index 494bbaa..d3960a6 100644
--- a/node_modules/react-native-material-textfield/src/components/field/index.js
+++ b/node_modules/react-native-material-textfield/src/components/field/index.js
@@ -1,4 +1,5 @@
 import PropTypes from 'prop-types';
+import {ViewPropTypes} from 'deprecated-react-native-prop-types'
 import React, { PureComponent } from 'react';
 import {
   View,
@@ -7,7 +8,7 @@ import {
   Animated,
   StyleSheet,
   Platform,
-  ViewPropTypes,
+  //ViewPropTypes,
 } from 'react-native';
 
 import Line from '../line';
@@ -83,9 +84,7 @@ export default class TextField extends PureComponent {
 
     labelOffset: Label.propTypes.offset,
 
-    labelTextStyle: Text.propTypes.style,
-    titleTextStyle: Text.propTypes.style,
-    affixTextStyle: Text.propTypes.style,
+ 
 
     tintColor: PropTypes.string,
     textColor: PropTypes.string,
@@ -221,6 +220,7 @@ export default class TextField extends PureComponent {
 
     let options = {
       toValue: this.focusState(),
+      useNativeDriver: false,
       duration,
     };
 
diff --git a/node_modules/react-native-material-textfield/src/components/helper/index.js b/node_modules/react-native-material-textfield/src/components/helper/index.js
index 6060f9f..7f790ca 100644
--- a/node_modules/react-native-material-textfield/src/components/helper/index.js
+++ b/node_modules/react-native-material-textfield/src/components/helper/index.js
@@ -5,19 +5,19 @@ import { Animated } from 'react-native';
 import styles from './styles';
 
 export default class Helper extends PureComponent {
-  static propTypes = {
-    title: PropTypes.string,
-    error: PropTypes.string,
+  // static propTypes = {
+  //   title: PropTypes.string,
+  //   error: PropTypes.string,
 
-    disabled: PropTypes.bool,
+  //   disabled: PropTypes.bool,
 
-    style: Animated.Text.propTypes.style,
+  //   style: PropTypes.object,
 
-    baseColor: PropTypes.string,
-    errorColor: PropTypes.string,
+  //   baseColor: PropTypes.string,
+  //   errorColor: PropTypes.string,
 
-    focusAnimation: PropTypes.instanceOf(Animated.Value),
-  };
+  //   focusAnimation: PropTypes.instanceOf(Animated.Value),
+  // };
 
   constructor(props) {
     super(props);
diff --git a/node_modules/react-native-material-textfield/src/components/label/index.js b/node_modules/react-native-material-textfield/src/components/label/index.js
index 82eaf03..eebad36 100644
--- a/node_modules/react-native-material-textfield/src/components/label/index.js
+++ b/node_modules/react-native-material-textfield/src/components/label/index.js
@@ -5,11 +5,11 @@ import { Animated } from 'react-native';
 import styles from './styles';
 
 export default class Label extends PureComponent {
-  static defaultProps = {
-    numberOfLines: 1,
-    disabled: false,
-    restricted: false,
-  };
+  // static defaultProps = {
+  //   numberOfLines: 1,
+  //   disabled: false,
+  //   restricted: false,
+  // };
 
   static propTypes = {
     numberOfLines: PropTypes.number,
@@ -43,7 +43,7 @@ export default class Label extends PureComponent {
       y1: PropTypes.number,
     }),
 
-    style: Animated.Text.propTypes.style,
+    style: PropTypes.object,
     label: PropTypes.string,
   };
 
diff --git a/node_modules/react-native-material-textfield/src/components/line/index.js b/node_modules/react-native-material-textfield/src/components/line/index.js
index 44995e9..7ba8db0 100644
--- a/node_modules/react-native-material-textfield/src/components/line/index.js
+++ b/node_modules/react-native-material-textfield/src/components/line/index.js
@@ -8,13 +8,13 @@ const lineTypes = PropTypes
   .oneOf(['solid', 'dotted', 'dashed', 'none']);
 
 export default class Line extends PureComponent {
-  static defaultProps = {
-    lineType: 'solid',
-    disabledLineType: 'dotted',
+  // static defaultProps = {
+  //   lineType: 'solid',
+  //   disabledLineType: 'dotted',
 
-    disabled: false,
-    restricted: false,
-  };
+  //   disabled: false,
+  //   restricted: false,
+  // };
 
   static propTypes = {
     lineType: lineTypes,
diff --git a/node_modules/react-native-material-textfield/src/components/outline/index.js b/node_modules/react-native-material-textfield/src/components/outline/index.js
index 9347a99..9c3e8a3 100644
--- a/node_modules/react-native-material-textfield/src/components/outline/index.js
+++ b/node_modules/react-native-material-textfield/src/components/outline/index.js
@@ -11,29 +11,29 @@ export default class Line extends PureComponent {
     restricted: false,
   };
 
-  static propTypes = {
-    lineType: PropTypes.oneOf(['solid', 'none']),
+  // static propTypes = {
+  //   lineType: PropTypes.oneOf(['solid', 'none']),
 
-    disabled: PropTypes.bool,
-    restricted: PropTypes.bool,
+  //   disabled: PropTypes.bool,
+  //   restricted: PropTypes.bool,
 
-    tintColor: PropTypes.string,
-    baseColor: PropTypes.string,
-    errorColor: PropTypes.string,
+  //   tintColor: PropTypes.string,
+  //   baseColor: PropTypes.string,
+  //   errorColor: PropTypes.string,
 
-    lineWidth: PropTypes.number,
-    activeLineWidth: PropTypes.number,
-    disabledLineWidth: PropTypes.number,
+  //   lineWidth: PropTypes.number,
+  //   activeLineWidth: PropTypes.number,
+  //   disabledLineWidth: PropTypes.number,
 
-    focusAnimation: PropTypes.instanceOf(Animated.Value),
-    labelAnimation: PropTypes.instanceOf(Animated.Value),
-    labelWidth: PropTypes.instanceOf(Animated.Value),
+  //   focusAnimation: PropTypes.instanceOf(Animated.Value),
+  //   labelAnimation: PropTypes.instanceOf(Animated.Value),
+  //   labelWidth: PropTypes.instanceOf(Animated.Value),
 
-    contentInset: PropTypes.shape({
-      left: PropTypes.number,
-      right: PropTypes.number,
-    }),
-  };
+  //   contentInset: PropTypes.shape({
+  //     left: PropTypes.number,
+  //     right: PropTypes.number,
+  //   }),
+  // };
 
   borderProps() {
     let {
